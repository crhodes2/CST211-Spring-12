#pragma once

template <class T>
class Array2D;

template <class T>
class Row{
	private:
		Array2D<T> const& m_array2D;
		int m_row;

	public:
		Row(Array2D<T> const& array, int row);
		
		T& operator[](int column);
		T const& operator[](int column) const;
};

template <class T>
Row<T>::Row(Array2D<T> const& array, int row) : m_array2D(array), m_row(row){

}
template <class T>
T& Row<T>::operator[](int column){
	return m_array2D.Select(m_row, column);
}

template <class T>
T const& Row<T>::operator[](int column) const{
	return m_array2D.Select(m_row, column);
}